[{"title":"ctfshow--web入门","date":"2023-06-23T06:17:35.000Z","path":"2023/06/23/ctfshow-web入门/","text":"ctfshow 24~28","raw":"---\ntitle: ctfshow--web入门\ndate: 2023-06-23 14:17:35\ncategories:categories:\n- Diary\n- Life\ntags:\n\t- web\n\t- ctfshow\n---\n# ctfshow 24~28\n\n ","categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://example.com/tags/web/"},{"name":"ctfshow","slug":"ctfshow","permalink":"http://example.com/tags/ctfshow/"}]},{"title":"pwn的学习路径及知识","date":"2023-06-21T08:01:05.000Z","path":"2023/06/21/pwn的学习路径及知识/","text":"","raw":"---\ntitle: pwn的学习路径及知识\ndate: 2023-06-21 16:01:05\ncategories:\ntags:\n\t- pwn\n\t- ctfshow\n---\n","categories":[],"tags":[{"name":"pwn","slug":"pwn","permalink":"http://example.com/tags/pwn/"},{"name":"ctfshow","slug":"ctfshow","permalink":"http://example.com/tags/ctfshow/"}]},{"title":"关于chatgdp的注册","date":"2023-02-19T10:36:57.000Z","path":"2023/02/19/关于chatgdp的注册/","text":"chatgpt 1.注册 关键的一步骤你需要会魔法（×，科学（√。可已去bilibi或者一列论坛等找方法这里就不多说 总之方法很多，各显神通吧。 2.准备 准备好上述的之后，代理问题，因为chatgpt是静止中国大陆ip访问，香港台湾都不行，所以推荐 韩国，日本，新加坡 第二部是找一个外国手机号码，不过大家应该都没有，不过网上有虚拟号码的平台 有几个大家可以参考下看看哪个好用: sms接管 tiger smscodeonline 推荐第一个 打开sms注册账号充值余额，大概也就几块钱 充值完成可能需要等一会，就先放着，直接进行下一步 3.注册 首先打开ChatGPT的账户注册页面。谷歌注册或者其他什么邮箱注册都可以，无所谓，我们这里用邮箱注册作为例子 用邮箱注册后你要验证邮件。进去邮箱，查看email里的链接。 如果有一些人会在这里遇到一个问题，会出现说不能在当前国家服务的提示，那就是整到国内地区了 解决地区先，你要把你的代理切换到任何合适的地区，不要选刚刚的国家。然后 1avascript:window.localStorage.removeItem(Object.keys(window.localStorage).find(i=&gt;i.startsWith(&#x27;@@auth0spajs&#x27;))) 接着在地址栏输头部写个j 这里一定手输入，复制是不能实现的 然后按下回车键，刷新页面。如果你的代理没问题，就可以看到正常工作的注册页面了 4.输入手机号 这里选的是韩国，这是因为我们使用韩国的代理 然后到我们的接码网站上去。在左侧搜索OpenAi 然后我们复制这个号码，粘贴过去。然后我们点击发送验证码就完成了。 等一会网站会提示验证码，我们复制粘贴。没来就刷新几遍 完成 错误及解决方法OpenAI’s services are not available in your country.do not have access to chat.openai.com. The site owner may have set restrictions that prevent you from accessing the site. 第一步，复制下面代码到浏览器地址栏 1avascript:window.localStorage.removeItem(Object.keys(window.localStorage).find(i=&gt;i.startsWith(&#x27;@@auth0spajs&#x27;))) 第二步，在上述代码的头部写个j 第三步回车后，更换魔法，如日本、韩国、印度、美国等，建议日本。之后重新登录即可。","raw":"---\ntitle: 关于chatgdp的注册\ndate: 2023-02-19 18:36:57\ntags:\ntop: 2\n---\n\n# chatgpt\n<!--more-->\n\n# 1.注册\n\n 关键的一步骤你需要会魔法（×，科学（√。可已去bilibi或者一列论坛等找方法这里就不多说\n\n 总之方法很多，各显神通吧。\n\n# 2.准备\n\n   准备好上述的之后，代理问题，因为chatgpt是静止中国大陆ip访问，香港台湾都不行，所以推荐\n 韩国，日本，新加坡\n  ![](/images/ai/1.png)\n   第二部是找一个外国手机号码，不过大家应该都没有，不过网上有虚拟号码的平台\n   有几个大家可以参考下看看哪个好用:\n   [sms接管](https://sms-activate.org/en/freeNumbers)\n   [tiger](https://tiger-sms.com/cn?utm_source=1265)\n   [smscodeonline](https://smscodeonline.com/)\n   推荐第一个\n   打开sms注册账号充值余额，大概也就几块钱\n   ![](/images/ai/2.png)\n   ![](/images/ai/3.png)\n充值完成可能需要等一会，就先放着，直接进行下一步\n\n# 3.注册\n\n  首先打开ChatGPT的账户注册页面。谷歌注册或者其他什么邮箱注册都可以，无所谓，我们这里用邮箱注册作为例子\n  ![](/images/ai/4.png)\n  用邮箱注册后你要验证邮件。进去邮箱，查看email里的链接。\n  ![](/images/ai/5.png)\n 如果有一些人会在这里遇到一个问题，会出现说不能在当前国家服务的提示，那就是整到国内地区了\n  ![](/images/ai/6.png)\n\n## 解决地区\n### 先，你要把你的代理切换到任何合适的地区，不要选刚刚的国家。然后\n ``` bash\navascript:window.localStorage.removeItem(Object.keys(window.localStorage).find(i=>i.startsWith('@@auth0spajs')))\n ```\n 接着在地址栏输头部写个j   这里一定手输入，复制是不能实现的\n  ![](/images/ai/7.png)\n 然后按下回车键，刷新页面。如果你的代理没问题，就可以看到正常工作的注册页面了\n\n#  4.输入手机号\n ![](/images/ai/8.png)\n 这里选的是韩国，这是因为我们使用韩国的代理\n 然后到我们的接码网站上去。在左侧搜索OpenAi\n ![](/images/ai/9.png)\n ![](/images/ai/10.png)\n然后我们复制这个号码，粘贴过去。然后我们点击发送验证码就完成了。\n\n等一会网站会提示验证码，我们复制粘贴。没来就刷新几遍\n ## 完成\n ![](/images/ai/11.png)\n\n# 错误及解决方法\nOpenAI's services are not available in your country.\ndo not have access to chat.openai.com. The site owner may have set restrictions that prevent you from accessing the site.\n\n第一步，复制下面代码到浏览器地址栏\n``` bash\navascript:window.localStorage.removeItem(Object.keys(window.localStorage).find(i=>i.startsWith('@@auth0spajs')))\n ```\n 第二步，在上述代码的头部写个j\n\n第三步\n回车后，更换魔法，如日本、韩国、印度、美国等，建议日本。之后重新登录即可。","categories":[],"tags":[]},{"title":"专升本ing(记录)","date":"2023-01-14T05:15:58.000Z","path":"2023/01/14/专升本ing/","text":"纪念一下 从我一开始什么都不想学的时候到开始慢慢学的过程,这是我的墨墨年度报告 这就是2022年一整年的记录。。。，突发奇想随手记录一下 —————–&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;分割线 后面我会记录每一天打卡觉得这很有意思从今年开始吧第291天","raw":"---\ntitle: 专升本ing(记录)\ndate: 2023-01-14 13:15:58\ntags:\ntop:\n---\n\n## 纪念一下\n<!--more-->\n从我一开始什么都不想学的时候到开始慢慢学的过程,这是我的墨墨年度报告\n![](/images/升本ing/1.jpg)\n![](/images/升本ing/2.jpg)\n![](/images/升本ing/3.jpg)\n![](/images/升本ing/4.jpg)\n![](/images/升本ing/5.jpg)\n![](/images/升本ing/6.jpg)\n![](/images/升本ing/7.jpg)\n![](/images/升本ing/8.jpg)\n![](/images/升本ing/9.jpg)\n\n这就是2022年一整年的记录。。。，突发奇想随手记录一下\n\n\n----------------->>>>>>>>>>>分割线\n\n### 后面我会记录每一天打卡觉得这很有意思\n从今年开始吧第291天\n![](/images/升本ing/10.jpg)","categories":[],"tags":[]},{"title":"misc实用工具-基于kali","date":"2021-10-24T01:07:55.000Z","path":"2021/10/24/misc实用工具-基于kali/","text":"misc实用工具-基于kali 10/24 更 图片相关jpgf5-steganography （F5隐写，需要passwd） 安装 kali中安装： git clone https://github.com/matthewgao/F5-steganography1&gt; git clone https://github.com/matthewgao/F5-steganography 使用【解密】 进入 F5-steganography 文件夹 打开终端 121.&gt;java Extract 1.jpg -p 1234562. #-p后接f5的key 最后打开.txt文件就可以 使用【加密】 11. &gt; java Embed 原图.jpg 生成图.jpg -e 隐藏的文件.txt -p 密码 outguess （可需要passwd）安装打开终端输入： git clone https://github.com/crorvick/outguess 1git clone https://github.com/crorvick/outguess 下载成功后进入outguess文件夹，在文件夹中打开终端输入：./configure &amp;&amp; make &amp;&amp; make install 121. &gt; ./configure &amp;&amp; make &amp;&amp; make install2. 。。。。。 成功后既可以使用 使用方法{加密}1234567891. &gt; outguess -k 12345 -d hidden.txt 1.jpg 2.jpg2....3.#-k后接密码4.#-d后接要隐藏的内容5.#加密后1.jpg会覆盖2.jpg 使用方法{解密}11. &gt; outguess -k 12345 -r 2.jpg out.txt out.txt 中内容即为想要隐藏的 hidden.txt 中内容 也可不需要密码，即 1&gt; outguess -r 2.jpg out.txt png &amp; bmpBlindWaterMark （盲水印）第一种 正常的bwm安装 在github上下载脚本，网址：https://github.com/chishaxie/BlindWaterMark 安装 python前置模块 1234pip install -i https://pypi.tuna.tsinghua.edu.cn/simple opencv-python... sudo pip install matplotlib... 解密在文件夹中打开终端 123python bwm.py decode 1.png 2.png flag.png或python3 BlindWaterMark.py decode 1.png 2.png flag.png 加密 1python bwm.py encode 1.png water.png 2.png 第二种 频域盲水印 脚本 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950 import cv2import numpy as npimport randomimport osfrom argparse import ArgumentParserALPHA = 5def build_parser(): parser = ArgumentParser() parser.add_argument(&#x27;--original&#x27;, dest=&#x27;ori&#x27;, required=True) parser.add_argument(&#x27;--image&#x27;, dest=&#x27;img&#x27;, required=True) parser.add_argument(&#x27;--result&#x27;, dest=&#x27;res&#x27;, required=True) parser.add_argument(&#x27;--alpha&#x27;, dest=&#x27;alpha&#x27;, default=ALPHA) return parserdef main(): parser = build_parser() options = parser.parse_args() ori = options.ori img = options.img res = options.res alpha = options.alpha if not os.path.isfile(ori): parser.error(&quot;original image %s does not exist.&quot; % ori) if not os.path.isfile(img): parser.error(&quot;image %s does not exist.&quot; % img) decode(ori, img, res, alpha)def decode(ori_path, img_path, res_path, alpha): ori = cv2.imread(ori_path) img = cv2.imread(img_path) ori_f = np.fft.fft2(ori) img_f = np.fft.fft2(img) height, width = ori.shape[0], ori.shape[1] watermark = (ori_f - img_f) / alpha watermark = np.real(watermark) res = np.zeros(watermark.shape) random.seed(height + width) x = range(height / 2) y = range(width) random.shuffle(x) random.shuffle(y) for i in range(height / 2): for j in range(width): res[x[i]][y[j]] = watermark[i][j] cv2.imwrite(res_path, res, [int(cv2.IMWRITE_JPEG_QUALITY), 100])if __name__ == &#x27;__main__&#x27;: main()使用 1python pinyubwm.py --original 1.png --image 2.png --result out.png 如果不行把图1图2换个位置 crc值爆破（zip包碰撞crc值)下载脚本：https://github.com/theonlypwner/crc32 1python crc32.py reverse 你的crc32密文 gaps(拼图) 拼图 依次执行以下五条命令 123451.git clone https://github.com/nemanja-m/gaps.git2.cd gaps 3.pip install -r requirements.txt4.sudo apt-get install python-tk5.pip install -e . 使用详细：https://www.zhuanzhi.ai/document/282c8a2293a31361d4c15b4451b5406a 创建拼图 1create_puzzle [图片绝对路径] --size=[尺寸] --destination=[创建拼图名称] 如果还原的是被切开成一小块一小块的拼图，需要先将其拼在一张大图上（可用montage命令），之后再用gaps将其还原： 还原拼图 123456781.gaps --image=out.jpg --generations=50 --population=120 --size=502.--image 指向拼图的路径--size 拼图块的像素尺寸--generations 遗传算法的代的数量--population 个体数量--verbose 每一代训练结束后展示最佳结果--save 将拼图还原为图像 如果不能明确提供–size的参数，拼图块尺寸将自适应调整，经过我的多次试验，提供–size参数效果会更好","raw":"---\ntitle: misc实用工具-基于kali\ndate: 2021-10-24 09:07:55\ncategories:\ntags:\n    - KALI\n---\n# misc实用工具-基于kali 10/24 更\n\n<!--more-->\n## 图片相关\n\njpg\nf5-steganography （F5隐写，需要passwd）\n* 安装\n   kali中安装： git clone https://github.com/matthewgao/F5-steganography\n ``` bash\n > git clone https://github.com/matthewgao/F5-steganography\n ```\n\n 使用【解密】\n 进入 F5-steganography 文件夹 打开终端\n ``` bash\n 1.>java Extract 1.jpg -p 123456\n 2. #-p后接f5的key\n ```\n 最后打开.txt文件就可以\n\n 使用【加密】\n ``` bash\n 1. > java Embed 原图.jpg 生成图.jpg -e 隐藏的文件.txt -p 密码\n ```\n\n## outguess （可需要passwd）\n\n### 安装\n\n打开终端输入： git clone https://github.com/crorvick/outguess\n\n``` bash\ngit clone https://github.com/crorvick/outguess\n```\n下载成功后进入outguess文件夹，在文件夹中打开终端输入：./configure && make && make install\n\n``` bash\n1. > ./configure && make && make install\n2. 。。。。。\n``` \n成功后既可以使用\n### 使用方法{加密}\n``` bash\n1. > outguess -k 12345 -d hidden.txt 1.jpg 2.jpg\n\n2....\n\n3.#-k后接密码\n\n4.#-d后接要隐藏的内容\n\n5.#加密后1.jpg会覆盖2.jpg\n``` \n### 使用方法{解密}\n``` bash\n1. > outguess -k 12345 -r 2.jpg out.txt\n``` \nout.txt 中内容即为想要隐藏的 hidden.txt 中内容\n\n也可不需要密码，即\n``` bash\n> outguess -r 2.jpg out.txt\n``` \n<!--更多-->\n## png & bmp\n### BlindWaterMark （盲水印）\n第一种 正常的bwm\n安装\n\t在github上下载脚本，网址：https://github.com/chishaxie/BlindWaterMark\n\t安装 python前置模块\n``` bash\npip install -i https://pypi.tuna.tsinghua.edu.cn/simple opencv-python\n...\n sudo pip install matplotlib\n...\n``` \n解密\n在文件夹中打开终端\n``` bash\npython bwm.py decode 1.png 2.png flag.png\n或\npython3 BlindWaterMark.py decode 1.png 2.png flag.png\n```\n加密\n``` bash\npython bwm.py encode 1.png water.png 2.png\n```\n\n第二种 频域盲水印\n\t脚本\n\t\t```bash\n\t\timport cv2\nimport numpy as np\nimport random\nimport os\nfrom argparse import ArgumentParser\n\nALPHA = 5\n\ndef build_parser():\n    parser = ArgumentParser()\n    parser.add_argument('--original', dest='ori', required=True)\n    parser.add_argument('--image', dest='img', required=True)\n    parser.add_argument('--result', dest='res', required=True)\n    parser.add_argument('--alpha', dest='alpha', default=ALPHA)\n    return parser\n\ndef main():\n    parser = build_parser()\n    options = parser.parse_args()\n    ori = options.ori\n    img = options.img\n    res = options.res\n    alpha = options.alpha\n    if not os.path.isfile(ori):\n        parser.error(\"original image %s does not exist.\" % ori)\n    if not os.path.isfile(img):\n        parser.error(\"image %s does not exist.\" % img)\n    decode(ori, img, res, alpha)\n\ndef decode(ori_path, img_path, res_path, alpha):\n    ori = cv2.imread(ori_path)\n    img = cv2.imread(img_path)\n    ori_f = np.fft.fft2(ori)\n    img_f = np.fft.fft2(img)\n    height, width = ori.shape[0], ori.shape[1]\n    watermark = (ori_f - img_f) / alpha\n    watermark = np.real(watermark)\n    res = np.zeros(watermark.shape)\n    random.seed(height + width)\n    x = range(height / 2)\n    y = range(width)\n    random.shuffle(x)\n    random.shuffle(y)\n    for i in range(height / 2):\n        for j in range(width):\n            res[x[i]][y[j]] = watermark[i][j]\n    cv2.imwrite(res_path, res, [int(cv2.IMWRITE_JPEG_QUALITY), 100])\n\nif __name__ == '__main__':\n    main()\n ```\n使用\n```bash\npython pinyubwm.py --original 1.png --image 2.png --result out.png\n```\n如果不行把图1图2换个位置\n\n# crc值爆破（zip包碰撞crc值)\n\n下载脚本：https://github.com/theonlypwner/crc32\n\n```bash \npython crc32.py reverse 你的crc32密文\n```\ngaps(拼图)\n\t拼图\n\t依次执行以下五条命令\n```bash\n1.git clone https://github.com/nemanja-m/gaps.git\n2.cd gaps  \n3.pip install -r requirements.txt\n4.sudo apt-get install python-tk\n5.pip install -e .\n```\n使用\n详细：https://www.zhuanzhi.ai/document/282c8a2293a31361d4c15b4451b5406a\n\n创建拼图\n```bash\ncreate_puzzle [图片绝对路径] --size=[尺寸] --destination=[创建拼图名称]\n```\n如果还原的是被切开成一小块一小块的拼图，需要先将其拼在一张大图上（可用montage命令），之后再用gaps将其还原：\n\n还原拼图\n```bash\n1.gaps --image=out.jpg --generations=50 --population=120 --size=50\n\n2.--image            指向拼图的路径\n--size            拼图块的像素尺寸\n--generations    遗传算法的代的数量\n--population    个体数量\n--verbose        每一代训练结束后展示最佳结果\n--save            将拼图还原为图像\n```\n如果不能明确提供--size的参数，拼图块尺寸将自适应调整，经过我的多次试验，提供--size参数效果会更好","categories":[],"tags":[{"name":"KALI","slug":"KALI","permalink":"http://example.com/tags/KALI/"}]},{"title":"CTFSHOW 月饼杯 misc TAO1","date":"2021-09-21T03:40:00.000Z","path":"2021/09/21/CTFSHOW-月饼杯-misc-TAO1/","text":"Project Tao-1 1.一进入页面就能看到根据题目提示你可以通过访问特定地址来跳转下一关，如/Letsstart，此页面为第O关，请注意关卡.输入/Letsstart 进入第二关 2.进入页面时看到下面提示 /some_informations直接进入 3.这应该是第三关了但根据网页说法可能存在某些地方出错试着在url上找一找我的第一感觉是删掉sohhh,对了竟然。。。进入下一关 4.可爱的方块这一关把我困了半天死活想不到rgb跟网站之间的各种联系，后面问了一下群里的师傅他们是说把颜色的R、G、B值按 ASCII 转为字符串即可得到下一关。。。 将rgb里面的数字转换为字符1234$ a=[71,48,111]$ for x in a:$ print(chr(x),end=&quot;&quot;) 最后得到 G0od! Next is /CTFG0d 5.第五关还算容易刚得到这个之后我就直接去试，结果怎样都不行，无奈又去问问群里的师傅们他们给我提示说是逆转base64—base16—base64—base32—reverse，我是少了最后一步，啊这，真的没想到 6.进入这一关后首先查看了一下log，根据提示又查看了一下源码发现了许多颜文字构成的,于是百度搜索颜表情解码出结果 7.这一关又再次被难住想了很长一段时间后我就随便弄了一下，成功了不过关于这一关 套神是这样说的123456789这题应该挺卡人的，主要是可能想不到（但是这题是有人出过的，解的话还不少），首先页面的标题叫no flag here然后log文件里面也有一个密文，解码方式其实就是s2 = r&#x27;nn]ch\\aXe\\WcgR``OUMYKLIP&#x27;for i in range(len(s2)): print(chr(ord(s2[i])+i),end=&#x27;&#x27;)#no_flag_means_no_f_l_a_g意思是把这四个字母去掉，tla5gsh0w去掉flag为/ct5sh0w 但还是没太明白 8.进入这一关之后根据log提示应该是有什么地方有信息随便翻一番鼠标往下滑动，发现下面有一个二维码不过这个二维码是错误的要靠自己手动得到 /t308g0d 9.二维码拼完扫描成功之后进入/t308g0d会给你一张图片到这步这道题已经快做完了查看了一下图片信息不知道为啥，我的第一反应是他的高有问题图片是942*460的把图片放到010里面修改一下图片的的高ok ，可以提交flag了做套神一道题坤也不困了。饿也不饿了，这是我第一次做出套神的题，挺高兴的","raw":"---\ntitle: CTFSHOW 月饼杯 misc TAO1\ndate: 2021-09-21 11:40:00\ncategories:\ntags:\n    - MISC\n    - ctfshow\n---\n# Project Tao-1\n<!--more-->\n1.一进入页面就能看到\n![](/images/1/a.png)\n根据题目提示\n你可以通过访问特定地址来跳转下一关，如/Letsstart，此页面为第O关，请注意关卡.\n输入/Letsstart  进入第二关\n\n2.进入页面时\n![](/images/1/a.1.png)\n看到下面提示  /some_informations\n直接进入\n\n3.这应该是第三关了\n![](/images/1/b.png)\n但根据网页说法可能存在某些地方出错\n试着在url上找一找\n我的第一感觉是删掉s \nohhh,对了竟然。。。进入下一关\n\n4.可爱的方块\n![](/images/1/c.png)\n这一关把我困了半天\n死活想不到rgb跟网站之间的各种联系，后面问了一下群里的师傅\n他们是说把颜色的R、G、B值按 ASCII 转为字符串即可得到下一关\n。。。\n### 将rgb里面的数字转换为字符\n``` bash\n$ a=[71,48,111]\n$ for x in a:\n$    print(chr(x),end=\"\")\n\n```\n最后得到   G0od! Next is /CTFG0d\n\n5.第五关还算容易\n![](/images/1/d.png)\n![](/images/1/d.1.png)\n![](/images/1/e.png)\n刚得到这个之后我就直接去试，结果怎样都不行，无奈又去问问群里的师傅们\n他们给我提示说是逆转\nbase64—base16—base64—base32—reverse，我是少了最后一步，啊这，真的没想到\n\n6.进入这一关后\n![](/images/1/f.png)\n首先查看了一下log，根据提示又查看了一下源码\n![](/images/1/g.png)\n发现了许多颜文字构成的,于是百度搜索颜表情解码\n![](/images/1/h.png)\n出结果\n\n7.这一关又再次被难住\n想了很长一段时间后\n我就随便弄了一下，成功了\n![](/images/1/i.png)\n不过关于这一关\n## 套神是这样说的\n``` bash\n这题应该挺卡人的，主要是可能想不到（但是这题是有人出过的，解的话还不少），首先页面的标题叫no flag here\n然后log文件里面也有一个密文，解码方式其实就是\n\ns2 = r'nn]ch\\aXe\\WcgR``OUMYKLIP'\nfor i in range(len(s2)):\n    print(chr(ord(s2[i])+i),end='')\n#no_flag_means_no_f_l_a_g\n意思是把这四个字母去掉，tla5gsh0w去掉flag为\n/ct5sh0w\n```\n但还是没太明白\n\n8.进入这一关之后\n![](/images/1/j.png)\n根据log提示应该是有什么地方有信息\n随便翻一番\n![](/images/1/k.png)\n鼠标往下滑动，发现下面有一个二维码\n不过这个二维码是错误的要靠自己手动得到 /t308g0d\n\n9.二维码拼完扫描成功之后进入/t308g0d\n会给你一张图片\n![](/images/1/l.png)\n到这步这道题已经快做完了\n查看了一下图片信息\n不知道为啥，我的第一反应是他的高有问题\n图片是942*460的\n把图片放到010里面修改一下图片的的高\n![](/images/1/1.png)\nok ，可以提交flag了\n做套神一道题坤也不困了。饿也不饿了，这是我第一次做出套神的题，挺高兴的","categories":[],"tags":[{"name":"ctfshow","slug":"ctfshow","permalink":"http://example.com/tags/ctfshow/"},{"name":"MISC","slug":"MISC","permalink":"http://example.com/tags/MISC/"}]},{"title":"CTFshow网络迷踪","date":"2021-09-05T03:11:36.000Z","path":"2021/09/05/CTFshow网络迷踪/","text":"此类型长期更新题目地址：非常有趣的题型（属于社工，但不完全社工），虽然我不怎么擅长，但是觉得非常好玩，没有全部做也是因为这种题很耗时间 工具即推荐地址0x1 谷歌识图地址：https://www.google.com/imghp推荐！谷歌图片应该是搜索效果最好的图片搜索引擎了。 0x2 百度识图地址：https://graph.baidu.com/pcpage/index?tpl_from=pc偏向中文网站图片资源搜索。 0x3 搜狗识图地址：https://pic.sogou.com搜狗识图的功能比较人性化，分为了「通用识图」「猫狗识别」「明星识别」「找高清大图」四大类。按需选择，可以提高识别效率。 0x4 Yandex.Images（本次很多题就有好多是别的搜不到，在这里能搜到噢！）地址：https://yandex.com/imagesYandex 是俄罗斯用户最多的网站，英文支持较好。效果相当给力，其它搜索引擎找不到的话用它试试，没准有惊喜哦。强烈推荐！ 0x5 TinEye地址：https://www.tineye.com老牌以图识图搜索网站，资源丰富。安装浏览器插件后可通过右键菜单直接使用。 0x6 可见即可搜 | 必应可视化搜索地址：https://www.bing.com/visualsearch?mkt=zh-CN由微软必应出品的视觉搜索引擎，支持植物、商品、家具、狗狗、文字、人物、建筑等特色搜索。 0x7 拍立淘地址：https://www.pailitao.com明星同款服饰、生活百货等相似商品搜索，可直接连接淘宝展示同款商品的购买地址。 0x8 WAIT: What Anime Is This?地址：https://trace.moe动漫视频截图识别，找动漫必备！通过动漫视频截图，搜索所截图片的来源，获得所截图片片段位置和来源。 0x9 你的狗是什么品种？地址：https://www.what-dog.net/如名称，微软的狗狗品种识别网站。 0xA SauceNAO Image Search地址：https://saucenao.comSauceNAO 是一个知名的图片逆向搜索引擎，尤其对于动画、漫画、插画作品、二次元图片等有着非常不错的识图搜索效果。上传图片，即可获得该图片的来源以及作者主页链接 正题1.新手上路直接百度识图，找到蜈支洲岛，然后就继续百度得到是情人桥 2.初学乍练提交这架飞机的目的地直接搜一下搜出来了第一次提交是瑞士发现不对，后面又看看下发现这张图直到这个链接试了试，对了！ 3.初学又练flag格式为 ctfshow{纬度(精确到小数点后四位, 不用进位),经度(精确到小数点后四位, 不用进位)} 例如 若找到的经纬度为( 11.45149,19.19810) 则flag为ctfshow{11.4514,19.1981}根据图片上面右边三明治店名 得到三明治店所在地点，然后找到经纬度， 4.初学再练通过搜索得出是一个军事基地然后找到是北极三叶草军事基地 5.先拉先吃提交图中店铺全名的拼音通过百度识图，根据碗的波纹，找到一个带有大众点评的图片，然后点进去找到餐厅看大众点评是十元，我直接提交发现不对，问问群里的各位大佬他们说正宗的兰州拉面是肉面分开这个是有肉的然后百度了一下找到菜单，素面7元，肉10元。。。","raw":"---\ntitle: CTFshow网络迷踪\ndate: 2021-09-05 11:11:36\ncategories:\ntags:\n\t- OSINT\n\t- ctfshow\n---\n# 此类型长期更新\n[题目地址：](https://ctf.show/challenges)\n![](/images/1.png)\n非常有趣的题型（属于社工，但不完全社工），虽然我不怎么擅长，但是觉得非常好玩，没有全部做\n也是因为这种题很耗时间\n---\n<!--more-->\n\n## 工具即推荐地址\n\n### 0x1 谷歌识图\n地址：https://www.google.com/imghp\n推荐！谷歌图片应该是搜索效果最好的图片搜索引擎了。\n\n### 0x2 百度识图\n地址：https://graph.baidu.com/pcpage/index?tpl_from=pc\n偏向中文网站图片资源搜索。\n\n### 0x3 搜狗识图\n地址：https://pic.sogou.com\n搜狗识图的功能比较人性化，分为了「通用识图」「猫狗识别」「明星识别」「找高清大图」四大类。按需选择，可以提高识别效率。\n\n### 0x4 Yandex.Images\n（本次很多题就有好多是别的搜不到，在这里能搜到噢！）\n地址：https://yandex.com/images\nYandex 是俄罗斯用户最多的网站，英文支持较好。效果相当给力，其它搜索引擎找不到的话用它试试，没准有惊喜哦。强烈推荐！\n\n### 0x5 TinEye\n地址：https://www.tineye.com\n老牌以图识图搜索网站，资源丰富。安装浏览器插件后可通过右键菜单直接使用。\n\n### 0x6 可见即可搜 | 必应可视化搜索\n地址：https://www.bing.com/visualsearch?mkt=zh-CN\n由微软必应出品的视觉搜索引擎，支持植物、商品、家具、狗狗、文字、人物、建筑等特色搜索。\n\n### 0x7 拍立淘\n地址：https://www.pailitao.com\n明星同款服饰、生活百货等相似商品搜索，可直接连接淘宝展示同款商品的购买地址。\n\n### 0x8 WAIT: What Anime Is This?\n地址：https://trace.moe\n动漫视频截图识别，找动漫必备！通过动漫视频截图，搜索所截图片的来源，获得所截图片片段位置和来源。\n\n### 0x9 你的狗是什么品种？\n地址：https://www.what-dog.net/\n如名称，微软的狗狗品种识别网站。\n\n### 0xA SauceNAO Image Search\n地址：https://saucenao.com\nSauceNAO 是一个知名的图片逆向搜索引擎，尤其对于动画、漫画、插画作品、二次元图片等有着非常不错的识图搜索效果。\n上传图片，即可获得该图片的来源以及作者主页链接\n\n## 正题\n### 1.新手上路\n![](/images/7.png)\n直接百度识图，找到蜈支洲岛，\n![](/images/8.png)\n然后就继续百度得到是情人桥\n\n### 2.初学乍练\n提交这架飞机的目的地\n![](/images/2.png)\n直接搜一下搜出来了\n第一次提交是瑞士发现不对，后面又看看下\n发现这张图直到这个链接\n![](/images/2.1.png)\n试了试，对了！\n\n### 3.初学又练\nflag格式为 ctfshow{纬度(精确到小数点后四位, 不用进位),经度(精确到小数点后四位, 不用进位)} 例如 若找到的经纬度为( 11.45149,19.19810) 则flag为ctfshow{11.4514,19.1981}\n![](/images/3.png)\n根据图片上面右边三明治店名 得到三明治店所在地点，然后找到经纬度，\n\n### 4.初学再练\n![](/images/5.1.png)\n通过搜索得出是一个军事基地\n![](/images/6.png)\n然后找到是北极三叶草军事基地\n\n###  5.先拉先吃\n提交图中店铺全名的拼音\n![](/images/4.png)\n通过百度识图，根据碗的波纹，找到一个带有大众点评的图片，然后点进去找到餐厅\n![](/images/5.png)\n看大众点评是十元，我直接提交发现不对，问问群里的各位大佬\n他们说正宗的兰州拉面是肉面分开这个是有肉的\n然后百度了一下找到菜单，素面7元，肉10元\n。。。","categories":[],"tags":[{"name":"ctfshow","slug":"ctfshow","permalink":"http://example.com/tags/ctfshow/"},{"name":"OSINT","slug":"OSINT","permalink":"http://example.com/tags/OSINT/"}]},{"title":"关于hexo基于个人博客环境搭建","date":"2021-08-27T06:36:52.000Z","path":"2021/08/27/关于hexo基于个人博客搭建/","text":"关于建立博客的时候中间遇到了许多问题这里十分感谢知乎这位的帖子，感谢。 关于hexo基于个人博客环境搭建 第一步 先去创建一个github账号，这个在后面新建仓库的时候需要具体就不多说了，很简单 第二部下载gitgit这个是git官网直接下来默认安装就行了最后结果安装好之后打开git bash注意是鼠标右击！！！ 第三步在之前我已经完成了GitHub的注册还有git的安装，现在就是将git与GitHub绑定了。 1.绑定GitHub生成密钥1$ ssh-keygen -t rsa 进入目录1$ cd ~/.ssh 查看密匙1$ cat id_rsa.pub 2.提交文件因为我本地没有 git 仓库，所以我就直说一种方法首先，进入GitHub个人主页：点击进入我新建的 github 项目： 然后复制你的仓库地址 在输入 git clone 你的仓库地址 第四步至于域名，看自己的想法，买也可以，不买也可以接下来安装 node和hexonode官网一路下来默认安装就行了具体还有环境变量设置枫叶请参考 安装hexo的时候注意我在安装的的时候没有搞清楚文件夹报错了还有仓库的名称格式要注意用户名.github.io安装完成后新建立一个文件夹在新建立的文件夹里鼠标右键打开 Git Bush Here，输入npm命令安装Hexo的命令： 1.1$ npm install -g hexo-cli 2.命令初始化博客1$ hexo init 3.静态部署1$ hexo g 4.查看1$ hexo g 浏览器输入 http://localhost:4000 就可以了 将Hexo部署到GitHub之前这个地方一直出错，我弄了很长时间回到根文件夹，用记事本打开_config.yml文件deploy:滑到底部填写 1234$ deploy: type: git repository: #你的仓库地址 branch: main 注意空格仓库地址就是然后再回到根文件夹中右击打开git bash 安装git插件 1$ npm install hexo-deployer-git --save 最后输入三条命令 123$ hexo clean #清除缓存文件 db.json 和已生成的静态文件 public$ hexo g #生成网站静态文件到默认设置的public文件夹(hexo generate 的缩写)$ hexo d #自动生成网站静态文件并部署到设定的仓库(hexo deploy 的缩写) 完成以后，打开浏览器，输入 你的用户名加github.io就可以打开你的网页了 最后设置主题我给大家推荐的主题网站themes 可能是我用了梯子的原因把，我用github还是挺快的觉得慢点小伙伴可以用国内的码云话说来了不过每写玩一次就要上传一下，是真的太麻烦的 好了，拜拜","raw":"---\ntitle: 关于hexo基于个人博客环境搭建\ndate: 2021-08-27 14:36:52\ntop: 2\ncategories:\ntags:\n  - 环境搭建\n---\n\n关于建立博客的时候中间遇到了许多问题这里十分感谢\n[知乎](https://www.zhihu.com/people/mai-nv-hai-de-xiao-huo-chai-35-19)\n这位的帖子，感谢。\n\n# 关于hexo基于个人博客环境搭建\n<!--more-->\n#  第一步\n---\n先去创建一个github账号，这个在后面新建仓库的时候需要\n具体就不多说了，很简单\n\n\n#  第二部\n\n下载git\n[git](https://git-scm.com/)这个是git官网 \n直接下来默认安装就行了\n最后结果\n安装好之后打开git bash\n**注意**\n**是鼠标右击！！！**\n\n\n#  第三步\n\n在之前我已经完成了GitHub的注册还有git的安装，现在就是将git与GitHub绑定了。\n\n##  1.绑定GitHub\n\n### 生成密钥\n``` bash\n$ ssh-keygen -t rsa\n```\n\n### 进入目录\n``` bash\n$ cd ~/.ssh \n``` \n\n### 查看密匙\n``` bash\n$ cat id_rsa.pub\n``` \n\n## 2.提交文件\n因为我本地没有 git 仓库，所以我就直说一种方法\n首先，进入GitHub个人主页：\n点击进入我新建的 github 项目：\n\n然后复制你的仓库地址\n\n在输入 **git  clone 你的仓库地址**\n\n# 第四步\n至于域名，看自己的想法，买也可以，不买也可以\n接下来安装 node和hexo\n[node官网](https://nodejs.org/en/)一路下来默认安装就行了\n具体还有环境变量设置\n[枫叶](https://zhuanlan.zhihu.com/p/105715224)请参考\n\n安装hexo的时候注意\n我在安装的的时候没有搞清楚文件夹报错了\n还有仓库的名称格式要注意 \n**用户名.github.io**\n安装完成后新建立一个文件夹\n在新建立的文件夹里鼠标右键打开 Git Bush Here，输入npm命令安装Hexo的命令：\n\n### 1.\n``` bash\n$ npm install -g hexo-cli\n``` \n\n### 2.命令初始化博客\n``` bash\n$ hexo init\n``` \n\n### 3.静态部署\n``` bash\n$ hexo g\n``` \n\n### 4.查看\n``` bash\n$ hexo g\n``` \n浏览器输入 http://localhost:4000 就可以了\n\n## 将Hexo部署到GitHub\n之前这个地方一直出错，我弄了很长时间\n回到根文件夹，用记事本打开_config.yml文件deploy:\n滑到底部\n填写\n``` bash\n$ deploy:\n  type: git\n  repository:  #你的仓库地址\n  branch: main\n``` \n\n**注意空格**\n仓库地址就是\n然后再回到根文件夹中\n右击打开git bash 安装git插件\n``` bash\n$ npm install hexo-deployer-git --save\n``` \n最后输入三条命令\n``` bash\n$ hexo clean  #清除缓存文件 db.json 和已生成的静态文件 public\n$ hexo g  #生成网站静态文件到默认设置的public文件夹(hexo generate 的缩写)\n$ hexo d  #自动生成网站静态文件并部署到设定的仓库(hexo deploy 的缩写)\n```\n\n完成以后，打开浏览器，输入 你的用户名加github.io\n就可以打开你的网页了\n\n# 最后设置主题\n我给大家推荐的主题网站\n[themes](https://hexo.io/themes/)\n\n可能是我用了梯子的原因把，我用github还是挺快的觉得慢点小伙伴可以用国内的码云\n话说来了不过每写玩一次就要上传一下，是真的太麻烦的\n\n---\n好了，拜拜","categories":[],"tags":[{"name":"环境搭建","slug":"环境搭建","permalink":"http://example.com/tags/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"}]}]